openapi: 3.0.0
info:
  version: 1.0.0
  title: TPX LE proxy
  description: Interface proxy between ThingPark X Location Engine and different types of LoRaWAN Network Servers
servers:
  - url: 'https://nano-things.net/tpxle-proxy'
    description: Demo server
  - url: 'http://localhost:8086/tpxle-proxy'
    description: Local test server
tags:
  - name: Application Server
    description: Interface endpoints for Application Server
  - name: Network Servers
    description: Interface endpoints for Network Servers

paths:

  /app_server:
    post:
      tags:
        - Application Server
      summary: Receive resolved location from ThingPark Location Solver
      description: This endpoint receives resolved location from ThingPark Location Solver and saves it in the servers DB.
      x-swagger-router-controller: appServer
      operationId: saveResolvedLocation
      requestBody:
        description: The message body sent by the ThingPark Location Solver.
        x-name: body
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LsResolvedLocation"
      responses:
        '200':
          description: \[200 OK\] The message was successfully received and forwarded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: \[400 Bad Request\] Invalid parameters supplied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '403':
          description: \[403 Forbidden\] Authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '500':
          description: \[500 Internal Server Error\] The server encountered an unexpected
            condition which prevented it from fulfilling the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'  
      
    get:
      tags:
        - Application Server
      summary: List resolved locations recently sent by the Location Solver
      description: This endpoint lists the latest resolved locations sent by ThingPark Location Solver.
      x-swagger-router-controller: appServer
      operationId: listResolvedLocations
      parameters:
        - name: deviceEUI
          description: Use this parameter to filter out one device with a specific DevEUI.
          in: query
          schema:
            type: string
      responses:
        '200':
          description: \[200 OK\] The list has been retreived
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LsResolvedLocation"
        '400':
          description: \[400 Bad Request\] Invalid parameters supplied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '403':
          description: \[403 Forbidden\] Authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '500':
          description: \[500 Internal Server Error\] The server encountered an unexpected
            condition which prevented it from fulfilling the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'  

  /uplink_actility:
    post:
      tags:
        - Network Servers
      summary: Receive uplinlk message from Actility Network Server
      description: This endpoint receives an uplink message from Actility Network Server, transforms it to the right format and forwards it to ThingPark Location Solver.
      x-swagger-router-controller: proxyNsLs
      operationId: uplinkActility
      parameters:
        - name: AS_ID
          in: query
          description: Application Server ID (only reported when the authentication is activated). AS_ID is not reported when the Uplink/downlink authentication is not activated in the AS profile.
          schema:
            type: string
        - name: LrnDevEui
          in: query
          description: Device DevEUI
          schema:
            type: string
        - name: LrnFPort
          in: query
          description: LoRaWANâ„¢ port number
          schema:
            type: number
        - name: LrnInfos
          in: query
          description: Service profile name used to route the packet
          schema:
            type: string
        - name: Time
          in: query
          description: ISO 8601 timestamp associated to the generation of the HTTP request by the LRC (only reported when the authentication is activated). Time is not reported when the Uplink/downlink authentication is not activated in the AS profile.
          schema:
            type: string
        - name: Token
          in: query
          description: Security token generated by the LRC (only reported when the authentication is activated). Token is not reported when the Uplink/downlink authentication is not activated in the AS profile.
          schema:
            type: string
      requestBody:
        description: The message body sent by the Network Server.
        x-name: body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NsActility'
          application/xml:
            schema:
              $ref: '#/components/schemas/NsActility'
      responses:
        '200':
          description: \[200 OK\] The message was successfully received.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: \[400 Bad Request\] Invalid parameters supplied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '403':
          description: \[403 Forbidden\] Authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '500':
          description: \[500 Internal Server Error\] The server encountered an unexpected
            condition which prevented it from fulfilling the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
  /uplink_ttn:
    post:
      tags:
        - Network Servers
      summary: Receive uplinlk message from TTN Network Server
      description: This endpoint receives an uplink message from TTN Network Server, transforms it to the right format and forwards it to ThingPark Location Solver.
      x-swagger-router-controller: proxyNsLs
      operationId: uplinkTTN
      requestBody:
        description: The message body sent by the Network Server.
        x-name: body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NsTTN'
      responses:
        '200':
          description: \[200 OK\] The message was successfully received.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: \[400 Bad Request\] Invalid parameters supplied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '403':
          description: \[403 Forbidden\] Authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '500':
          description: \[500 Internal Server Error\] The server encountered an unexpected
            condition which prevented it from fulfilling the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
  /uplink_loriot:
    post:
      tags:
        - Network Servers
      summary: Receive uplinlk message from Loriot Network Server
      description: This endpoint receives an uplink message from Loriot Network Server, transforms it to the right format and forwards it to ThingPark Location Solver.
      x-swagger-router-controller: proxyNsLs
      operationId: uplinkLoriot
      requestBody:
        description: The message body sent by the Network Server.
        x-name: body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NsLoriot'
      responses:
        '200':
          description: \[200 OK\] The message was successfully received.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: \[400 Bad Request\] Invalid parameters supplied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '403':
          description: \[403 Forbidden\] Authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '500':
          description: \[500 Internal Server Error\] The server encountered an unexpected
            condition which prevented it from fulfilling the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'

components:

  schemas:
  
    LsResolvedLocation:
      type: object
      properties:
        dxProfileId:
          type: string 
          example: poc-api
        customerId: 
          type: string 
          example: '100002659'
        deviceEUI: 
          type: string 
          example: 20635F00C50000AF
        time:
          type: string 
          example: '2019-04-03T08:11:15.335000+00:00'
        coordinates:
          type: array
          items: 
            type: number
          example: [19.047703, 47.46676, 146]
        age: 
          type: number 
          example: 0
        validityState: 
          type: string 
          example: NEW
        horizontalAccuracy: 
          type: number 
          example: 65
        processedFeed:
          type: object
          properties:
            payloadEncoded: 
              type: string 
              example: 032c946e19004432c832f9bfbe48f8b37c935fbd38437d8aafe4b93a431d8aafe4b8
            sequenceNumber: 
              type: number 
              example: 9233
            dynamicMotionState: 
              type: string 
              example: MOVING
            temperatureMeasure: 
              type: number 
              example: 11.6470585
            processedPacket:
              type: object
              properties:
                RSSI: 
                  type: number
                  example: -89
                baseStationId: 
                  type: string
                  example: 004A0DAA
                antennaCoordinates:
                  type: array
                  items:
                    type: number
                  example: [0, 0]
        rawPosition:
          type: object
          properties:
            rawPositionType: 
              type: string 
              example: RawPositionByWifiSolver
            coordinates:
              type: array
              items:
                type: number
              example: [19.047703, 47.46676]
            bssidCount: 
              type: number 
              example: 4
        resolvedTracker:
          type: object
          properties:
            firmwareVersion:
              type: string 
              example: 1.7.1
            messageType: 
              type: string 
              example: Position Message
            trackingMode: 
              type: string 
              example: MOTION_TRACKING
            gpsScanMode: 
              type: string 
              example: UNKNOWN
            sensorMode: 
              type: string 
              example: UNKNOWN
            batteryLevel: 
              type: number 
              example: 99
            activityCount: 
              type: number 
              example: -1

    LsFeed:
      type: object
      properties:
        deviceEUI: 
          description: Unique device identifier. 
          type: string
        time: 
          description: Time associated with the device position (e.g. time of arrival to the base station), in ISO 8601 format.
          type: string
        coordinates:
          description: Device coordinates, to be used 'as is' in the platform. Expected value is an array of coordinates as per the GeoJSON specification, i.e. [longitude, latitude, altitude].
          type: array
          items:
            type: number
          example: [2.333673, 48.874931, 100]
        solverInput:
          description: Input to be used for resolution of device location through solvers (i.e. generic solver, TDoA/RSSI solver, WiFi solver).
          type: object
          properties:
            solverInputType:
              description: Type of solver input eventually extending the FeedInputForGenericSolver resource to allow more specific attributes to be provided. = ['FeedInputForGenericSolver', 'FeedInputForAgpsSolver', 'FeedInputForGpsSolver', 'FeedInputForTdoaRssiSolver', 'FeedInputForWifiSolver']
              type: string
              enum: ['FeedInputForGenericSolver', 'FeedInputForAgpsSolver', 'FeedInputForGpsSolver', 'FeedInputForTdoaRssiSolver', 'FeedInputForWifiSolver']
            sequenceNumber: 
              description: Sequence number of the device uplink.
              type: integer
              example: 157
            port: 
              type: integer
              description: LoRa port used by the device.
              example: 17
            receptionTime: 
              description: Time associated with the reception of the device uplink, in ISO 8601 format.
              type: string
            SF: 
              description: Spreading factor value of the device.
              type: integer
              example: 12
            packets: 
              description: List of packets received by base stations and related to the device uplink.
              type: array
              items:
                type: object
                properties:
                  baseStationId: 
                    description: Id of the base station (aka LRR or gateway) which received the uplink.
                    type: string
                    example: '08040059'
                  antennaId: 
                    description: Id of the base station antenna which received the uplink. Possible values are 0 (main), 1 (diversity for mono-sector LRRs), or 0 to 2 (for tri-sector LRRs).
                    type: integer
                    enum: [0, 1, 2]
                  antennaCoordinates: 
                    description: Coordinates of the base station antenna. Expected value is an array of coordinates as per the GeoJSON specification, i.e. [longitude, latitude, altitude].
                    type: array
                    items: 
                      type: number
                    example: [2.333673, 48.874931, 100] 
                  antennaHeight: 
                    description: Height of the base station's antenna in cm.
                    type: number
                    example: 150
                  SNR: 
                    description: Signal to Noise ratio in dB.
                    type: number
                    example: 9.750000
                  RSSI: 
                    description: RSSI in dBm.
                    type: number
                    example: -60.000000
                  barometerMeasure: 
                    description: Atmospheric pressure measured by the base station in mb.
                    type: number
                  arrivalSeconds: 
                    description: Coarse arrival time on the antenna in seconds.
                    type: integer
                  arrivalAdditionalNanos: 
                    description: Additional nanoseconds completing the arrival time second.
                    type: integer
            dynamicMotionState: 
              description: Motion state provided by the device. Possible values are 'MOVING', 'STATIC' and 'UNKNOWN'. = ['MOVING', 'STATIC', 'UNKNOWN'],
              type: string
              enum: ['MOVING', 'STATIC', 'UNKNOWN']
            temperatureMeasure: 
              description: Temperature measured by the device in celsius degrees.
              type: number
              example: 21
            accelerometerMeasures: 
              description: Proper acceleration measured by the device in m/s2. Expected value is an array of measures per axis, i.e. [x, y, z].
              type: array
              items: 
                type: number
            gyroscopeMeasures: 
              description: Rotational motion measured by the device in degrees/s. Expected value is an array of measures per axis, i.e. [roll, pitch, yaw].
              type: array
              items: 
                type: number
            barometerMeasure: 
              description: Atmospheric pressure measured by the device in mb.
              type: number
            lastContext: 
              description: This optional attribute contains the Base64 encoded binary solver state returned with the last calculated position. This attribute may be required if the target solver is configured in stateless mode and this is not the first request for a given deviceEUI.
              type: string
        payload:
          description: Payload sent by the device, to be used to obtain additional information from specific tracker devices (e.g. Abeeway tracker).
          type: object
          properties:
            deviceProfileId: 
              description: Id of the profile associated with the device, used for decoding properly the payload.
              type: string
              example: 'ABEEWAY/MICRO'
            payloadEncoded: 
              description: Binary device payload encoded as an hexadecimal string.
              type: string
              example: 'aabb0011'

    NsActility:

      type: object
      properties:
        DevEUI_uplink:
          description: Actility uplink message
          type: object
          properties:
            ACKbit: 
              description: ACKBit set by the device. ACKbit is not filled in the document if not set in the uplink frame.
              type: string
              example: '1'
            AckRequested:
              description: ACK requested indicator (Boolean).
              type: string
              example: ''
            ADRAckReq: 
              description: ADR acknowledgment request bit.
              type: string
              example: ''
            ADRbit:
              description: ADRBit set by the device. ADRbit is not filled in the document if not set in the uplink frame.
              type: string
              example: '1'
            AFCntDn:
              description: The applicative downlink counter to be used for the next downlink frame. Only applicable to LoRaWAN 1.1 when the FPort >0.
              type: string
              example: ''
            AppSKey: 
              description: Encrypted AppSkey with the HSM-generated AS key. AppSKey is not filled in the document if HSM is notused. For more details, please refer to Appendix.
              type: string
              example: ''
            BatteryLevel: 
              description: Battery level reported by the ReportDevStatus. BatteryLevel is only filled if the Connectivity Plan ReportDevStatusBattery feature flag is activated. When activated, the battery level is only reported periodically, according to the Connectivity Plan DevStatusReqFreq setting.
              type: string
              example: ''
            BatteryTime: 
              description: Battery level reporting timestamp (ISO 8601). BatteryTime is only filled if the Connectivity Plan ReportDevStatusBattery feature flag is activated. When activated, the battery level is only reported periodically, according to the Connectivity Plan DevStatusReqFreq setting.
              type: string
              example: ''
            Channel: 
              description: LC used by the device.
              type: string
              example: 'LC2'
            ConfAFCntDn: 
              description: The applicative downlink counter CONFIRMED by the device for this packet. Only applicable to LoRaWANâ„¢ 1.1 when the uplink frame acknowledges a previous downlink frame.
              type: string
              example: ''
            CustomerData:
              description: JSON customer data set by provisioning.
              type: string
              example: '{"loc":{"lat":"43.58081","lon":"1.4421667"},"alr": {"pro": "STL","ver":"1"}}'
            CustomerID: 
              description: Customer ID associated to the Device Manager account.
              type: string
              example: '100000507'
            DevAddr: 
              description: Device DevAddr.
              type: string
              example: '0405F519'
            DevEUI: 
              description: Device DevEUI.
              type: string
              example: '000000000F1D8693'
            DevLrrCnt: 
              description: Number of LRRs which received this packet.
              type: string
              example: '2'
            DevLocTime: 
              description: Last geolocation timestamp (ISO 8601).
              type: string
              example: ''
            DevLAT: 
              description: Last geolocation latitude (GPS coordinate system).
              type: string
              example: ''
            DevLON: 
              description: Last geolocation longitude (GPS coordinate system).
              type: string
              example: ''
            DevAlt: 
              description: Last geolocation altitude (meter).
              type: string
              example: ''
            DevLocRadius: 
              description: Last geolocation horizontal tolerance (meter).
              type: string
              example: ''
            DevAltRadius: 
              description: Last geolocation vertical tolerance (meter).
              type: string
              example: ''
            DevNorthVel: 
              description: Velocity (NORTH axis) expressed in m/s
              type: string
              example: ''
            DevEastVel: 
              description: Velocity (EAST axis) expressed in m/s
              type: string
              example: ''
            DevLocDilution: 
              description: Horizontal DOP (dilution of precision) calculated for given mutual position of gateways, used for solution calculation, and device.
              type: string
              example: ''
            DevAltDilution: 
              description: Vertical DOP (dilution of precision) calculated for given mutual position of gateways, used for solution calculation, and device. FCntDn The downlink counter to be used for the next downlink frame. Only applicable to LoRaWANâ„¢ 1.0.
              type: string
              example: ''
            FCntDn: 
              description: The downlink counter to be used for the next downlink frame. Only applicable to LoRaWANâ„¢ 1.0.
              type: string
              example: '11'
            FCntUp: 
              description: The uplink counter for this packet.
              type: string
              example: '7011'
            FPort: 
              description: LoRaWANâ„¢ FPort used by the device for this packet.
              type: string
              example: '2'
            InstantPER:
              description: Instant PER (Packet Error Rate). InstantPER is only filled if the Connectivity Plan AddPERInfo feature flag is activated. The instant PER is computed from a sliding window of the last n packets (where n is configured through the EstimationSlidingWindow of the RF Region).
              type: string
              example: '0.02'
            Late: 
              description: Indicates if the packet was queued by the LRR. Late is always filled. 0 means that the packet was not queued by the LRR, 1 means that the packet was queued (the LRR queues packets when the connection between the LRR and the LRC is temporarily out of service).
              type: string
              example: '0'
            Lrcid: 
              description: ID of the LRC that processed the packet.
              type: string
              example: '00000065'
            Lrrid: 
              description: The ID of the LRR that received the packet with the best SNR. This LRR is flagged as "best LRR".
              type: string
              example: '08040059'
            LrrLAT:
              description: LAT and LON of the best LRR. LrrLAT, LrrLON are only filled if the Connectivity Plan AddLrrMetaInfo feature flag is activated.
              type: string
              example: '48.874931'
            LrrLON:
              description: LAT and LON of the best LRR. LrrLAT, LrrLON are only filled if the Connectivity Plan AddLrrMetaInfo feature flag is activated.
              type: string
              example: '2.333673'
            LrrRSSI: 
              description: RSSI measured by the best LRR.
              type: string
              example: '60.000000'
            LrrSNR: 
              description: SNR measured by the best LRR.
              type: string
              example: '9.750000'
            Lrrs:
              type: object
              properties:
                Lrr:
                  type: array
                  items:
                    type: object
                    properties:
                      Chain: 
                        description: The LRR antenna chain used to receive the packet.
                        type: string
                        example: '0'
                      Lrrid: 
                        description: LRR ID associated to this <Lrr> field. See Notes.
                        type: string
                        example: '08040059'
                      LrrESP: 
                        description: ESP measured by the LRR associated to this <Lrr> fieldelement. See Notes.
                        type: string
                        example: '-59.000000'
                      LrrRSSI: 
                        description: RSSI measured by the LRR associated to this <Lrr> field. See Notes.
                        type: string
                        example: '-60.000000'
                      LrrSNR: 
                        description: SNR measured by the LRR associated to this <Lrr> field. See Notes.
                        type: string
                        example: '9.750000'
            Margin: 
              description: Margin reported by the ReportDevStatus. Margin is only filled if the Connectivity Plan ReportDevStatusMargin feature flag is activated. When activated, the margin is only reported periodically, according to the Connectivity Plan DevStatusReqFreq setting.
              type: string
              example: ''
            MeanPER: 
              description: Mean PER (Packet Error Rate). MeanPER is only filled if the Connectivity Plan AddPERInfo feature flag is activated.
              type: string
              example: '0.02'
            mic_hex: 
              description: MIC in hexadecimal ASCII format.
              type: string
              example: '38e7a3b9'
            ModelCfg: 
              description: ASCII ThingPark Cloud data set by provisioning.
              type: string
              example: '0'
            MType: 
              description: LoRaWANâ„¢ MType of the packet.
              type: string
              example: '4'
            NbTrans:
              description: The number of transmissions for each uplink message requested by the LRC, according to ADR algorithm and validated by the device through a LinkADRAns MAC command. If no LinkADRAns have been yet validated by the device, NbTrans = 1.
              type: string
              example: '1'
            NwGeolocAlgo:
              description: 'Network geolocation algorithm: >>> 0 = Time Difference Of Arrival (TDOA)\: The algorithm is based on an uplink frame time of arrival and received signal characteristics at the receiving gateways. >>> 1 = Received Signal Strength Indicator (RSSI)\: The algorithm is based on an uplink frame received signal strength of at the receiving gateways. NwGeolocAlgo is only filled if a geolocation is reported.'
              type: string
              enum: ['0', '1']
              example: '0'
            payload_hex: 
              description: LoRaWANâ„¢ payload in hexadecimal ASCII format.
              type: string
              example: '0027bd00'
            rawMacCommands: 
              description: Hexadecimal ASCII dump of the LoRaWANâ„¢ MAC option or LoRaWANâ„¢ MAC payload (port=0).
              type: string
              example: ''
            SpFact: 
              description: SF used by the device. 
              type: string
              example: '7'
            SubBand: 
              description: Sub-band used by the device.
              type: string
              example: 'G1'
            Time: 
              description: LRR Timestamp for the packet.
              type: string
              example: '2018-07-09T16:06:38.49+02:00'
            TxPower: 
              description: The transmission power of the device (in dBm), computed by the LRC based on ADR algorithm and validated by the device through a LinkADRAns. If no LinkADRAns have been yet validated by the device, the device boot parameter is used instead.
              type: string
              example: '14'
            UplinkDC: 
              description: The aggregate occupancy rate of the RF logical channel associated to this uplink frame, as estimated at the time of reception. UplinkDC is only filled if the Connectivity Plan AddUplinkDCInfo feature flag is activated.
              type: string
              example: '0.001'
            UplinkDCSubBand: 
              description: The aggregate occupancy rate of the RF sub-band associated to this uplink frame, as estimated at the time of reception. UplinkDCSubBand is only filled if the Connectivity Plan AddUplinkDCInfo feature flag is activated.
              type: string
              example: '0.009'

    NsTTN:
      type: object
      properties:
        app_id:
          description: Same as in the topic
          type: string
          example: 'my-app-id'
        dev_id:
          description: Same as in the topic
          type: string
          example: 'my-dev-id'
        hardware_serial:
          description: 'In case of LoRaWAN: the DevEUI'
          type: string
          example: '0102030405060708'
        port:
          description: LoRaWAN FPort
          type: integer
          example: 1
        counter:
          description: LoRaWAN frame counter
          type: integer
          example: 2
        is_retry:
          description: Is set to true if this message is a retry (you could also detect this from the counter)
          type: boolean
          example: false
        confirmed:
          description: Is set to true if this message was a confirmed message
          type: boolean
          example: false
        payload_raw:
          description: 'Base64 encoded payload: [0x01, 0x02, 0x03, 0x04]'
          type: string
          example: 'AQIDBA=='
        payload_fields:
          description: Object containing the results from the payload functions - left out when empty
          type: object
          example: {}

        metadata:
          description: ''
          type: object
          properties:
            time:
              description: Time when the server received the message
              type: string
              example: '1970-01-01T00:00:00Z'
            frequency:
              description: Frequency at which the message was sent
              type: number
              example: 868.1
            modulation:
              description: Modulation that was used - LORA or FSK
              type: string
              example: 'LORA'
            data_rate:
              description: Data rate that was used - if LORA modulation
              type: string
              example: 'SF7BW125'
            bit_rate:
              description: Bit rate that was used - if FSK modulation
              type: number
              example: 50000
            coding_rate:
              description: Coding rate that was used
              type: string
              example: '4/5'
            gateways:
              type: array
              items:
                type: object
                properties:
                  gtw_id: 
                    description: EUI of the gateway
                    type: string
                    example: 'ttn-herengracht-ams'
                  timestamp: 
                    description: Timestamp when the gateway received the message
                    type: number
                    example: 12345
                  time: 
                    description: Time when the gateway received the message - left out when gateway does not have synchronized time
                    type: string
                    example: '1970-01-01T00:00:00Z'
                  channel: 
                    description: Channel where the gateway received the message
                    type: number
                    example: 0
                  rssi: 
                    description: Signal strength of the received message
                    type: number
                    example: -25
                  snr: 
                    description: Signal to noise ratio of the received message
                    type: number
                    example: 5
                  rf_chain: 
                    description: RF chain where the gateway received the message
                    type: integer
                    example: 0
                  latitude: 
                    description: Latitude of the gateway reported in its status updates
                    type: number
                    example: 52.1234
                  longitude: 
                    description: Longitude of the gateway
                    type: number
                    example: 6.1234
                  altitude: 
                    description: Altitude of the gateway
                    type: number
                    example: 6
            latitude:
              description: Latitude of the device
              type: number
              example: 52.2345
            longitude:
              description: Longitude of the device
              type: number
              example: 6.2345
            altitude:
              description: Altitude of the device
              type: number
              example: 2
        downlink_url:
          description: ''
          type: string
          example: 'https://integrations.thethingsnetwork.org/ttn-eu/api/v2/down/my-app-id/my-process-id?key=ttn-account-v2.secret'

    NsLoriot:
      type: object
      properties:
        cmd: 
          description: identifies type of message, rx = uplink message
          type: string
          example: 'rx'
        EUI: 
          description: device EUI, 16 hex digits (without dashes)
          type: string
          example: '0011223344556677'
        ts: 
          description: server timestamp as number (miliseconds from Linux epoch)
          type: integer
          example: 1555847833236
        ack: 
          description: NEW! acknowledgement flag as set by device
          type: boolean
          example: false
        fcnt: 
          description: frame counter, a 32-bit number
          type: integer
          example: 118
        port: 
          description: port as sent by the end device
          type: integer
          example: 17
        encdata: 
          description: data payload (APPSKEY encrypted hex string) only present if APPSKEY is assigned to device
          type: string
          example: 'af234b'
        data: 
          description: data payload (decrypted, plaintext hex string) only present if APPSKEY is not assigned to device
          type: string
          example: 'aabbcc11'
        freq: 
          description: radio frequency at which the frame was received, in Hz
          type: integer
          example: 868100000
        dr: 
          description: radio data rate - spreading factor, bandwidth and coding rate e.g. SF12 BW125 4/5
          type: string
          example: 'SF12 BW125 4/5'
        rssi: 
          description: frame rssi, in dBm, as integer number
          type: integer
          example: -97
        snr: 
          description: frame snr, in dB, one decimal place
          type: number
          example: -7.25
     
    MessageResponse:
      type: object
      properties:
        message:
          type: object
          properties:
            text:
              type: string
            code:
              type: integer
   
